#also check compressive failure for this component
import sympy as smp
import Variables_for_crossection_geometry as Var
import matplotlib.pyplot as plt
from math import *
import Normal_stress_distribution as str
import numpy as np

a = smp.symbols('a', real=True)
h = smp.symbols('h', real=True)
d = smp.symbols('d', real=True, positive=True)
t = smp.symbols('t', real=True)
x = smp.symbols('x', real=True)
y = smp.symbols('y', real=True)
z = smp.symbols('z', real=True)
r = smp.symbols('r', real=True, positive=True)
alpha = smp.symbols('\u03B1', real=True)
beta = smp.symbols('\u03B2', real=True)
rho = smp.symbols('\u03C1', real=True)
sigma = smp.symbols('\u03C3', real=True)
theta = smp.symbols('\u03B8', real=True)
eta = smp.symbols('\u03B7', real=True)
xi = smp.symbols('\u03BE', real=True)
ixx = smp.symbols('Ixx', real=True)
iyy = smp.symbols('Iyy', real=True)
ixy = smp.symbols('Ixy', real=True)
mx = smp.symbols('Mx', real=True)
my = smp.symbols('My', real=True)

stress_dist_fun = smp.lambdify([y], str.stress_16_1.subs([(z, str.br_z1), (x, str.br_x1)]).simplify())

#Moment of inertia calculation X axis for stringer
#centroid z direction
Str_z_tilda_= (Var.Str_v_len*Var.Str_v_th*Var.Str_v_len/2)/Var.Str_A
Str_MOI_X = (Var.Str_h_len*Var.Str_h_th**3/12 + Var.Str_h_len*Var.Str_h_th*(Str_z_tilda_ - Var.Str_h_th/2)**2) + (Var.Str_v_len**3*Var.Str_v_th/12 + Var.Str_v_len*Var.Str_v_th * (Var.Str_v_len/2-Str_z_tilda_)**2) 

print(Str_MOI_X)
#Calculating critical stress
def critical_stress_b_Str(L):
    sigma = (Var.k * pi**2 *Var.e_mod *Str_MOI_X)/(L**2*Var.Str_A)
    return sigma

#Check
#print(critical_stress_b_Str(Var.Span/(2*30))/1e6, "MPa")

#Ribs spacing and ribs location along half-span
ribs_spacing_list_3 = [0.534261602642555, 0.525745792613091, 0.517948192133515, 0.510807981088931, 0.504278027391229, 0.498322565969259, 0.492915713953116, 0.488040637415200, 0.483689285827142, 0.479862693176665, 0.476571931811814, 0.473839921959174, 0.471704487447047, 0.470223387542136, 0.469482727462029, 0.469611605477857, 0.470809336470809, 0.707830742064340, 0.719502430751495, 1.23647866009611, 0.644328916142815, 0.666243412755113, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043, 1.22935110850043]
ribs_location_list_3 = [0.543573620188936, 1.07783522283149, 1.60358101544458, 2.12152920757810, 2.63233718866703, 3.13661521605826, 3.63493778202752, 4.12785349598063, 4.61589413339583, 5.09958341922297, 5.57944611239964, 6.05601804421145, 6.52985796617063, 7.00156245361767, 7.47178584115981, 7.94126856862184, 8.41088017409970, 8.88168951057050, 9.58952025263484, 10.3090226833863, 11.5455013434825, 12.1898302596253, 12.8560736723804, 14.0854247808808, 15.3147758893812, 16.5441269978817, 17.7734781063821, 19.0028292148825, 20.2321803233829, 21.4615314318834, 22.6908825403838, 23.9202336488842, 25.1495847573847, 26.3789358658851, 27.6082869743855, 28.8376380828859, 30.0669891913864, 31.2963402998868, 32.5256914083872]
span = np.linspace(0, Var.Span*0.5, endpoint=True)

ribs_location_list_2 = [0.185721089400130, 0.370585824136262, 0.554605528727890, 0.737791358360086, 0.920154303488289, 1.10170519433066, 1.28245470525211, 1.46241335904403, 1.64159153110359, 1.81999945351647, 1.99764721904658, 2.17454478503654, 2.35070197722222, 2.52612849346487, 2.70083390740412, 2.87482767203506, 3.04811912321260, 3.22071748308613, 3.39263186346755, 3.56387126913558, 3.73444460107927, 3.90436065968347, 4.07362814785908, 4.24225567412086, 4.41025175561526, 4.57762482110126, 4.74438321388638, 4.91053519472085, 5.07608894465212, 5.24105256784246, 5.40543409435195, 5.56924148288949, 5.73248262353410, 5.89516534042911, 6.05729739445156, 6.21888648585929, 6.37994025691813, 6.54046629451162, 6.70047213273576, 6.85996525548119, 7.01895309900529, 7.17744305449677, 7.33544247063525, 7.49295865614840, 7.64999888236927, 7.80657038579650, 7.96268037066013, 8.11833601149574, 8.27354445572990, 8.42831282627968, 8.58264822416943, 8.73655773116776, 8.89004841244807, 9.04312731927578, 9.19580149172591, 9.34807796143434, 9.49996375438664, 9.65146589374823, 9.80259140273987, 9.95334730756278, 10.1037406403777, 10.2537784423426, 10.4034677667136, 10.5528156820147, 10.7018292752808, 10.8505156553810, 10.9988819564265, 11.1469353412704, 11.2946830051064, 11.4421321791719, 11.5892901345644, 11.7361641861787, 11.8768790497270, 12.0173297842296, 12.1575228420585, 12.2974647199048, 12.4371619622309, 12.5766211648433, 12.7158489785925, 12.8548521132097, 12.9936373412893, 13.1322115024257, 13.2705815075153, 13.4087543432343, 13.5467370767043, 13.6845368603574, 13.8221609370155, 13.9596166451967, 14.0969114246655, 14.2340528222424, 14.3710484978920, 14.5079062311081, 14.6446339276164, 14.7812396264191, 14.9177315072033, 15.0541178981421, 15.1904072841150, 15.3266083153807, 15.4627298167349, 15.5987807971894, 15.7347704602151, 15.8707082145897, 16.0066036859001, 16.1424667287509, 16.2783074397368, 16.4141361712409, 16.5499635461292, 16.6858004734166, 16.8216581649881, 16.9575481534677, 17.0934823113374, 17.2294728714191, 17.3655324488446, 17.5016740646537, 17.6379111711754, 17.7742576793642, 17.9107279882869, 18.0473370169741, 18.1841002388813, 18.3210337192324, 18.4581541555534, 18.5954789217449, 18.7330261160884, 18.8708146136339, 19.0088641234809, 19.1471952515335, 19.2858295694013, 19.4247896902112, 19.5640993522179, 19.7037835112363, 19.8438684430879, 19.9843818574458, 20.1253530247049, 20.2668129177821, 20.4087943711023, 20.5513322594390, 20.6944636997971, 20.8382282801519, 20.9826683196455, 21.1278291658169, 21.2737595356697, 21.4205119089385, 21.5681429839016, 21.7167142086497, 21.8662924040564, 22.0169504990830, 22.1687684048875, 22.3218340620744, 22.4762447061613, 22.6321084112330, 22.7895459927368, 22.9486933805037, 23.1097046172115, 23.2727557036807, 23.4380496142001, 23.6058229664779, 23.7763550955960, 23.9499807335606, 24.1271083060567, 24.3082473947934, 24.4940520439855, 24.6853935669184, 24.8834940314143, 25.0902036097070, 25.5249383426937, 25.9627467866448, 26.4005552305959, 26.8383636745470, 27.2761721184981, 27.7139805624492, 28.1517890064003, 28.5895974503514, 29.0274058943025, 29.4652143382536, 29.9030227822047, 30.3408312261557, 30.7786396701068, 31.2164481140579, 31.6542565580090, 32.0920650019601, 32.5298734459112, 32.9676818898623]
ribs_spacing_list_2 = [0.184864734736131, 0.184019704591628, 0.183185829632196, 0.182362945128203, 0.181550890842372, 0.180749510921452, 0.179958653791918, 0.179178172059562, 0.178407922412874, 0.177647765530111, 0.176897565989960, 0.176157192185678, 0.175426516242650, 0.174705413939250, 0.173993764630944, 0.173291451177541, 0.172598359873528, 0.171914380381417, 0.171239405668032, 0.170573331943690, 0.169916058604197, 0.169267488175617, 0.168627526261772, 0.167996081494408, 0.167373065485994, 0.166758392785122, 0.166151980834468, 0.165553749931273, 0.164963623190338, 0.164381526509494, 0.163807388537538, 0.163241140644609, 0.162682716895009, 0.162132054022451, 0.161589091407730, 0.161053771058836, 0.160526037593491, 0.160005838224144, 0.159493122745428, 0.158987843524097, 0.158489955491482, 0.157999416138485, 0.157516185513152, 0.157040226220869, 0.156571503427231, 0.156109984863624, 0.155655640835612, 0.155208444234155, 0.154768370549781, 0.154335397889751, 0.153909506998336, 0.153490681280304, 0.153078906827710, 0.152674172450126, 0.152276469708431, 0.151885792952307, 0.151502139361589, 0.151125508991637, 0.150755904822912, 0.150393332814942, 0.150037801964902, 0.149689324371015, 0.149347915301045, 0.149013593266121, 0.148686380100196, 0.148366301045449, 0.148053384843959, 0.147747663836015, 0.147449174065459, 0.147157955392484, 0.146874051614338, 0.140714863548250, 0.140450734502690, 0.140193057828884, 0.139941877846223, 0.139697242326155, 0.139459202612421, 0.139227813749132, 0.139003134617191, 0.138785228079624, 0.138574161136434, 0.138370005089610, 0.138172835719015, 0.137982733469935, 0.137799783653096, 0.137624076658100, 0.137455708181234, 0.137294779468769, 0.137141397576902, 0.136995675649639, 0.136857733216043, 0.136727696508354, 0.136605698802698, 0.136491880784230, 0.136386390938729, 0.136289385972890, 0.136201031265779, 0.136121501354136, 0.136050980454534, 0.135989663025689, 0.135937754374577, 0.135895471310393, 0.135863042850864, 0.135840710985890, 0.135828731504065, 0.135827374888300, 0.135836927287416, 0.135857691571494, 0.135889988479613, 0.135934157869735, 0.135990560081662, 0.136059577425443, 0.136141615809128, 0.136237106521672, 0.136346508188875, 0.136470308922700, 0.136609028687152, 0.136763221907212, 0.136933480351140, 0.137120436320999, 0.137324766191490, 0.137547194343441, 0.137788497545577, 0.138049509846942, 0.138331128052623, 0.138634317867802, 0.138960120809934, 0.139309662006639, 0.139684159018434, 0.140084931851548, 0.140513414357976, 0.140971167259071, 0.141459893077230, 0.141981453320136, 0.142537888336753, 0.143131440358125, 0.143764580354765, 0.144440039493590, 0.145160846171374, 0.145930369852795, 0.146752373268841, 0.147631074963093, 0.148571224748057, 0.149578195406703, 0.150658095026605, 0.151817905804562, 0.153065657186861, 0.154410644086929, 0.155863705071657, 0.157437581503861, 0.159147387766804, 0.161011236707828, 0.163051086469198, 0.165293910519371, 0.167773352277850, 0.170532129118053, 0.173625637964626, 0.177127572496099, 0.181139088736682, 0.185804649192180, 0.191341522932822, 0.198100464495890, 0.206709578292781, 0.434734732986671, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096, 0.437808443951096]
ribs_location_list_1 = [0.171333328854168, 0.341952478877749, 0.511865303483147, 0.681079556516676, 0.849602894413155, 1.01744287830918, 1.18460697611616, 1.35110256455410, 1.51693693114725, 1.68211727618249, 1.84665071463166, 2.01054427803854, 2.17380491637178, 2.33643949984437, 2.49845482070095, 2.65985759497355, 2.82065446420698, 2.98085199715449, 3.14045669144479, 3.29947497522120, 3.45791320875375, 3.61577768602523, 3.77307463629185, 3.92981022561941, 4.08599055839574, 4.24162167882038, 4.39670957237193, 4.55126016725427, 4.70527933582211, 4.85877289598668, 5.01174661260247, 5.16420619883554, 5.31615731751428, 5.46760558246327, 5.61855655982100, 5.76901576934211, 5.91898868568494, 6.06848073968494, 6.21749731961482, 6.36604377243202, 6.51412540501410, 6.66174748538301, 6.80891524391862, 6.95563387456235, 7.10190853601154, 7.24774435290532, 7.39314641700245, 7.53811978835208, 7.68266949645786, 7.82680054143630, 7.97051789516987, 8.11382650245574, 8.25673128215060, 8.39923712831257, 8.54134891134059, 8.68307147911228, 8.82440965812078, 8.96536825461146, 9.10595205571913, 9.24616583060662, 9.38601433160533, 9.52550229535872, 9.66463444396940, 9.80341548615067, 9.94185011838336, 10.0799430260788, 10.2176988847486, 10.3551223611830, 10.4922181146366, 10.6289907980255, 10.7654450591339, 10.9015855418328, 11.0374168873115, 11.1729437353222, 11.3081707254406, 11.4431024983410, 11.5777436970893, 11.7120989684546, 11.8416698407833, 11.9709743294917, 12.1000166427168, 12.2288009957717, 12.3573316123173, 12.4856127255556, 12.6136485794443, 12.7414434299352, 12.8690015462367, 12.9963272121025, 13.1234247271472, 13.2502984081907, 13.3769525906333, 13.5033916298621, 13.6296199026910, 13.7556418088364, 13.8814617724298, 14.0070842435689, 14.1325136999107, 14.2577546483069, 14.3828116264853, 14.5076892047783, 14.6323919879022, 14.7569246167886, 14.8812917704714, 15.0054981680325, 15.1295485706078, 15.2534477834587, 15.3772006581105, 15.5008120945626, 15.6242870435732, 15.7476305090233, 15.8708475503637, 15.9939432851490, 16.1169228916643, 16.2397916116482, 16.3625547531187, 16.4852176933059, 16.6077858816995, 16.7302648432145, 16.8526601814847, 16.9749775822887, 17.0972228171171, 17.2194017468885, 17.3415203258222, 17.4635846054783, 17.5856007389724, 17.7075749853769, 17.8295137143200, 17.9514234107923, 18.0733106801754, 18.1951822535052, 18.3170449929836, 18.4389058977553, 18.5607721099650, 18.6826509211130, 18.8045497787290, 18.9264762933829, 19.0484382460564, 19.1704435958981, 19.2925004883870, 19.4146172639338, 19.5368024669483, 19.6590648554046, 19.7814134109408, 19.9038573495292, 20.0264061327584, 20.1490694797716, 20.2718573799093, 20.3947801061087, 20.5178482291163, 20.6410726325772, 20.7644645290671, 20.8880354771424, 21.0117973994886, 21.1357626022563, 21.2599437956815, 21.3843541160980, 21.5090071494579, 21.6339169564911, 21.7590980996454, 21.8845656719654, 22.0103353280838, 22.1364233175195, 22.2628465204951, 22.3896224865131, 22.5167694759567, 22.6443065050088, 22.7722533942230, 22.9006308211150, 23.0294603771901, 23.1587646298763, 23.2885671898871, 23.4188927846108, 23.5497673381992, 23.6812180591205, 23.8132735360455, 23.9459638430594, 24.0793206553340, 24.2133773765613, 24.3481692796465, 24.4837336623871, 24.6201100201398, 24.7573402377983, 24.8954688037915, 25.0345430492722, 25.1746134162202, 25.3157337588534, 25.4579616835500, 25.6013589334749, 25.7459918253167, 25.8919317470353, 26.0392557273749, 26.1880470902121, 26.3383962097195, 26.4904013860056, 26.6441698655939, 26.7998190371455, 26.9574778406737, 27.1172884387715, 27.2794082119640, 27.4440121584866, 27.6112958033997, 27.7814787557067, 27.9548090990670, 28.1315688679515, 28.3120809562105, 28.4967179441364, 28.6859135377822, 28.8801776314914, 29.0801165016963, 29.2864604420534, 29.5001024876028, 29.7221541935380, 29.9540286339379, 30.1975688074406, 30.4552559617903, 30.7305682659331, 31.0286474567249, 31.3576719717748, 31.7321308970638, 32.1826411572039, 32.8014576016417]
ribs_spacing_list_1 = [0.170619150023580, 0.169912824605398, 0.169214253033530, 0.168523337896479, 0.167839983896026, 0.167164097806979, 0.166495588437944, 0.165834366593144, 0.165180345035244, 0.164533438449163, 0.163893563406886, 0.163260638333235, 0.162634583472594, 0.162015320856575, 0.161402774272604, 0.160796869233430, 0.160197532947511, 0.159604694290303, 0.159018283776401, 0.158438233532549, 0.157864477271485, 0.157296950266623, 0.156735589327552, 0.156180332776338, 0.155631120424631, 0.155087893551550, 0.154550594882347, 0.154019168567835, 0.153493560164571, 0.152973716615790, 0.152459586233070, 0.151951118678739, 0.151448264948990, 0.150950977357728, 0.150459209521114, 0.149972916342825, 0.149492053999999, 0.149016579929888, 0.148546452817191, 0.148081632582084, 0.147622080368916, 0.147167758535610, 0.146718630643722, 0.146274661449195, 0.145835816893777, 0.145402064097134, 0.144973371349627, 0.144549708105782, 0.144131044978436, 0.143717353733575, 0.143308607285863, 0.142904779694865, 0.142505846161968, 0.142111783028025, 0.141722567771689, 0.141338179008499, 0.140958596490675, 0.140583801107674, 0.140213774887487, 0.139848500998710, 0.139487963753392, 0.139132148610680, 0.138781042181270, 0.138434632232688, 0.138092907695415, 0.137755858669878, 0.137423476434325, 0.137095753453612, 0.136772683388913, 0.136454261108406, 0.136140482698922, 0.135831345478632, 0.135526848010758, 0.135226990118383, 0.134931772900361, 0.134641198748389, 0.134355271365265, 0.129570872328731, 0.129304488708362, 0.129042313225133, 0.128784353054884, 0.128530616545611, 0.128281113238254, 0.128035853888678, 0.127794850490887, 0.127558116301544, 0.127325665865821, 0.127097515044664, 0.126873681043524, 0.126654182442608, 0.126439039228743, 0.126228272828898, 0.126021906145468, 0.125819963593379, 0.125622471139120, 0.125429456341783, 0.125240948396212, 0.125056978178371, 0.124877578293029, 0.124702783123906, 0.124532628886367, 0.124367153682836, 0.124206397561051, 0.124050402575316, 0.123899212850910, 0.123752874651838, 0.123611436452084, 0.123474949010587, 0.123343465450129, 0.123217041340380, 0.123095734785312, 0.122979606515263, 0.122868719983908, 0.122763141470442, 0.122662940187268, 0.122568188393554, 0.122478961515001, 0.122395338270197, 0.122317400804012, 0.122245234828430, 0.122178929771336, 0.122118578933757, 0.122064279656104, 0.122016133494035, 0.121974246404562, 0.121938728943114, 0.121909696472288, 0.121887269383121, 0.121871573329749, 0.121862739478390, 0.121860904771713, 0.121866212209675, 0.121878811148050, 0.121898857615969, 0.121926514653889, 0.121961952673554, 0.122005349841633, 0.122056892488891, 0.122116775546896, 0.122185203014467, 0.122262388456272, 0.122348555536201, 0.122443938588413, 0.122548783229208, 0.122663347013216, 0.122787900137716, 0.122922726199313, 0.123068123007594, 0.123224403460914, 0.123391896489950, 0.123570948075319, 0.123761922346195, 0.123965202767636, 0.124181193425217, 0.124410320416488, 0.124653033359920, 0.124909807033224, 0.125181143154331, 0.125467572319953, 0.125769656118431, 0.126087989435695, 0.126423202975531, 0.126775966018067, 0.127146989443556, 0.127537029052113, 0.127946889214258, 0.128377426891915, 0.128829556075124, 0.129304252686220, 0.129802560010796, 0.130325594723669, 0.130874553588419, 0.131450720921332, 0.132055476924998, 0.132690307013889, 0.133356812274565, 0.134056721227336, 0.134791903085192, 0.135564382740592, 0.136376357752701, 0.137230217658520, 0.138128565993215, 0.139074245480645, 0.140070366948001, 0.141120342633250, 0.142227924696572, 0.143397249924860, 0.144632891841820, 0.145939921718637, 0.147323980339551, 0.148791362837228, 0.150349119507416, 0.152005176286130, 0.153768479588272, 0.155649171551554, 0.157658803528279, 0.159810598097764, 0.162119773192526, 0.164603946522554, 0.167283644913088, 0.170182952307024, 0.173330343360264, 0.176759768884533, 0.180512088258955, 0.184636987925927, 0.189195593645794, 0.194264093709181, 0.199938870204975, 0.206343940357077, 0.213642045549389, 0.222051705935231, 0.231874440399868, 0.243540173502734, 0.257687154349698, 0.275312304142812, 0.298079190791798, 0.329024515049895, 0.374458925289025, 0.450510260140049, 0.618816444437761]

critical_stress_list_3 = []
critical_buck_stress=[]
for i in range(len(ribs_spacing_list_3)):
    sigma_buck = critical_stress_b_Str(ribs_spacing_list_3[i])
    critical_buck_stress.append(sigma_buck)
    critical_buck_stress.append(sigma_buck)
    critical_stress_list_3.append(sigma_buck)
critical_stress_list_1 = []
for i in range(len(ribs_spacing_list_1)):
    critical_stress_list_1.append(critical_stress_b_Str(ribs_spacing_list_1[i]))
critical_stress_list_2 = []
for i in range(len(ribs_spacing_list_2)):
    critical_stress_list_2.append(critical_stress_b_Str(ribs_spacing_list_2[i]))

final_position_list = []
for i in range(len(ribs_location_list_3)-1):
    final_position_list.append(ribs_location_list_3[i])
    final_position_list.append(ribs_location_list_3[i+1])

#print(final_position_list)

#Check
#print(critical_buck_stress)
plt.figure()
#plt.plot(ribs_location_list_3[:38], critical_buck_stress, marker='o')
# plt.plot(final_position_list, critical_buck_stress)
plt.plot(span, -stress_dist_fun(span[0:]))
plt.xlabel("Spanwise location")
plt.ylabel("Critical buckling stress [MPA]")
plt.show()

margin_of_safety_list_3 = []
list_position_3 = []
for i in range(len(ribs_location_list_3)-1):
    start = ribs_location_list_3[i]
    end = ribs_location_list_3[i+1]
    average = 0.5*(start+end)
    critical_stress_value = critical_stress_list_3[i]
    ratio_list = []
    ratio_start = -critical_stress_value/stress_dist_fun(start)
    ratio_end = -critical_stress_value/stress_dist_fun(end)
    ratio_average = -critical_stress_value/stress_dist_fun(average)
    ratio_list.append(ratio_start)
    ratio_list.append(ratio_average)
    ratio_list.append(ratio_end)
    ratio = min(ratio_list)
    if ratio == ratio_start:
        list_position_3.append(start)
    elif ratio == ratio_average:
        list_position_3.append(average)
    else:
        list_position_3.append(end)
    margin_of_safety_list_3.append(ratio)

plt.figure()
plt.plot(list_position_3, margin_of_safety_list_3)
plt.xlabel("Spanwise location")
plt.ylabel("Margin of safety [-]")
plt.show()

margin_of_safety_list_1 = []
list_position_1 = []
for i in range(len(ribs_location_list_1)-1):
    start = ribs_location_list_1[i]
    end = ribs_location_list_1[i+1]
    average = 0.5*(start+end)
    critical_stress_value = critical_stress_list_1[i]
    ratio_list = []
    ratio_start = -critical_stress_value/stress_dist_fun(start)
    ratio_end = -critical_stress_value/stress_dist_fun(end)
    ratio_average = -critical_stress_value/stress_dist_fun(average)
    ratio_list.append(ratio_start)
    ratio_list.append(ratio_average)
    ratio_list.append(ratio_end)
    ratio = min(ratio_list)
    if ratio == ratio_start:
        list_position_1.append(start)
    elif ratio == ratio_average:
        list_position_1.append(average)
    else:
        list_position_1.append(end)
    margin_of_safety_list_1.append(ratio)

plt.figure()
plt.plot(list_position_1, margin_of_safety_list_1)
plt.xlabel("Spanwise location")
plt.ylabel("Margin of safety [-]")
plt.show()

margin_of_safety_list_2 = []
list_position_2 = []
for i in range(len(ribs_location_list_2)-1):
    start = ribs_location_list_2[i]
    end = ribs_location_list_2[i+1]
    average = 0.5*(start+end)
    critical_stress_value = critical_stress_list_2[i]
    ratio_list = []
    ratio_start = -critical_stress_value/stress_dist_fun(start)
    ratio_end = -critical_stress_value/stress_dist_fun(end)
    ratio_average = -critical_stress_value/stress_dist_fun(average)
    ratio_list.append(ratio_start)
    ratio_list.append(ratio_average)
    ratio_list.append(ratio_end)
    ratio = min(ratio_list)
    if ratio == ratio_start:
        list_position_2.append(start)
    elif ratio == ratio_average:
        list_position_2.append(average)
    else:
        list_position_2.append(end)
    margin_of_safety_list_2.append(ratio)

plt.figure()
plt.plot(list_position_2, margin_of_safety_list_2)
plt.xlabel("Spanwise location")
plt.ylabel("Margin of safety [-]")
plt.show()